import{b as a,e as l,a4 as d,f as p,h as v,aE as g,af as C,_ as y}from"./index.293c77a4.js";import{g as P}from"./url-bc88b2b6.browser.esm.94115fe4.js";import{W as f,a as c,U as h,R as E,C as I,A as _,S as D}from"./errors-d961f852.browser.esm.61f33de0.js";import{n as m}from"./normalizeChainId-e4cc0175.browser.esm.042707b7.js";var u=new WeakMap;class S extends f{constructor(e){let{chains:t,options:n,connectorStorage:o}=e;const r={shimDisconnect:!0,...n};super({chains:t,options:r}),a(this,"id","frame"),a(this,"name","Frame"),a(this,"ready",!0),a(this,"shimDisconnectKey",`${this.id}.shimDisconnect`),l(this,u,{writable:!0,value:void 0}),a(this,"onAccountsChanged",i=>{i.length===0?this.emit("disconnect"):this.emit("change",{account:d(i[0])})}),a(this,"onChainChanged",i=>{const s=m(i),w=this.isChainUnsupported(s);this.emit("change",{chain:{id:s,unsupported:w}})}),a(this,"onDisconnect",()=>{this.emit("disconnect"),this.options.shimDisconnect&&this.connectorStorage.removeItem(this.shimDisconnectKey)}),this.connectorStorage=o}async connect(e){try{const t=await this.getProvider();if(!t)throw new c;this.setupListeners(),this.emit("message",{type:"connecting"});const n=await t.request({method:"eth_requestAccounts"}),o=d(n[0]);let r=await this.getChainId(),i=this.isChainUnsupported(r);return(e==null?void 0:e.chainId)&&r!==(e==null?void 0:e.chainId)&&(r=(await this.switchChain(e==null?void 0:e.chainId)).chainId,i=this.isChainUnsupported(r)),this.options.shimDisconnect&&this.connectorStorage.setItem(this.shimDisconnectKey,"true"),{account:o,provider:t,chain:{id:r,unsupported:i}}}catch(t){throw this.isUserRejectedRequestError(t)?new h(t):t.code===-32002?new E(t):t}}async disconnect(){const e=await this.getProvider();!(e!=null&&e.removeListener)||(e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),this.isInjected()||e.close(),this.options.shimDisconnect&&this.connectorStorage.removeItem(this.shimDisconnectKey))}async getAccount(){const e=await this.getProvider();if(!e)throw new c;const t=await e.request({method:"eth_accounts"});return d(t[0])}async getChainId(){const e=await this.getProvider();if(!e)throw new c;const t=await e.request({method:"eth_chainId"});return m(t)}async getProvider(){return p(this,u,this.isInjected()?this.injectedProvider():await this.createProvider()),v(this,u)}async getSigner(){let{chainId:e}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const[t,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new g(t,e).getSigner(n)}async isAuthorized(){try{if(this.options.shimDisconnect&&!this.connectorStorage.getItem(this.shimDisconnectKey))return!1;if(!await this.getProvider())throw new c;return!!await this.getAccount()}catch{return!1}}async switchChain(e){var o;const t=await this.getProvider();if(!t)throw new c;const n=C(e);try{return await Promise.all([t.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),new Promise(r=>this.on("change",i=>{let{chain:s}=i;(s==null?void 0:s.id)===e&&r()}))]),(o=this.chains.find(r=>r.chainId===e))!=null?o:{chainId:e,name:`Chain ${n}`,slug:`${n}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],chain:"",shortName:"",testnet:!0}}catch(r){const i=this.chains.find(s=>s.chainId===e);if(!i)throw new I({chainId:e,connectorId:this.id});if(r.code===4902)try{if(await t.request({method:"wallet_addEthereumChain",params:[{chainId:n,chainName:i.name,nativeCurrency:i.nativeCurrency,rpcUrls:P(i),blockExplorerUrls:this.getBlockExplorerUrls(i)}]}),await this.getChainId()!==e)throw new h(new Error("User rejected switch after adding network."));return i}catch(s){throw this.isUserRejectedRequestError(s)?new h(s):new _(s.message)}throw this.isUserRejectedRequestError(r)?new h(r):new D(r)}}async watchAsset(e){let{address:t,decimals:n=18,image:o,symbol:r}=e;const i=await this.getProvider();if(!i)throw new c;return i.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:t,decimals:n,image:o,symbol:r}}})}async setupListeners(){const e=await this.getProvider();e.on&&(e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect))}isUserRejectedRequestError(e){return e.code===4001}injectedProvider(){return window==null?void 0:window.ethereum}isInjected(){var e;return!!((e=this.injectedProvider())!=null&&e.isFrame)}async createProvider(){const e=(await y(()=>import("./browser.454bf611.js").then(t=>t.b),["assets/browser.454bf611.js","assets/index.293c77a4.js","assets/index.09a325bf.css"])).default;return e("frame")}}export{S as FrameConnector};
