var d=Object.defineProperty;var f=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>(f(s,typeof e!="symbol"?e+"":e,t),t);import{cy as C,aG as w,aH as W,cz as y,aJ as R,aY as i,aK as T,ah as A,aL as c,aM as l}from"./index.293c77a4.js";import{C as b,a as E,G as S,b as O}from"./contract-appuri-7234c8e6.browser.esm.81c07377.js";import{C as v}from"./contract-interceptor-6f8989ff.browser.esm.79a9b943.js";import{C as D}from"./contract-platform-fee-f9de4858.browser.esm.fb41d8c2.js";import{C as F}from"./contract-roles-381cbf9d.browser.esm.8aab8fda.js";import{C as V}from"./contract-sales-b8c598f7.browser.esm.db18623d.js";import{D as _}from"./drop-claim-conditions-27cfc6f0.browser.esm.5cc24213.js";import{S as B}from"./erc-20-standard-ff3bb378.browser.esm.eeca8ecf.js";import"./index.00d0239b.js";import"./assertEnabled-e3719c36.browser.esm.4d41d034.js";import"./setErc20Allowance-87350278.browser.esm.ea5614f4.js";import"./erc-20-49b44f9b.browser.esm.f5f966d2.js";const h=class extends B{constructor(t,r,a){let o=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},m=arguments.length>4?arguments[4]:void 0,u=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new w(t,r,m,o,a);super(g,a,u);n(this,"claim",c((()=>{var t=this;return async function(r){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return t.claimTo.prepare(await t.contractWrapper.getSignerAddress(),r,a)}})()));n(this,"claimTo",c((()=>{var t=this;return async function(r,a){let o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return t.erc20.claimTo.prepare(r,a,{checkERC20Allowance:o})}})()));n(this,"delegateTo",c(async t=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await i(t)]})));n(this,"burnTokens",c(async t=>this.erc20.burn.prepare(t)));n(this,"burnFrom",c(async(t,r)=>this.erc20.burnFrom.prepare(t,r)));this.abi=W.parse(m||[]),this.metadata=new b(this.contractWrapper,y,this.storage),this.app=new E(this.contractWrapper,this.metadata,this.storage),this.roles=new F(this.contractWrapper,h.contractRoles),this.encoder=new R(this.contractWrapper),this.estimator=new S(this.contractWrapper),this.events=new O(this.contractWrapper),this.sales=new V(this.contractWrapper),this.platformFees=new D(this.contractWrapper),this.interceptor=new v(this.contractWrapper),this.claimConditions=new _(this.contractWrapper,this.metadata,this.storage)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[await i(t)]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await i(t)])}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[T("transfer"),A])}async prepare(t,r,a){return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}};let p=h;n(p,"contractRoles",C);export{p as TokenDrop};
